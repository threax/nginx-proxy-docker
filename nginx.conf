worker_processes 4;

events { worker_connections 1024; }


http {
    # error_log stderr warn;

    sendfile on;
    server_tokens off;

    # Fix identityserver bad gateway errors
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    large_client_header_buffers 4 16k;
   
    # Compression
    gzip on;
    gzip_types      application/javascript text/css;
    #gzip_proxied    any; # The docs say you need this, but it doesnt do anything

    # Proxy Settings
    resolver 127.0.0.11 ipv6=off valid=30s;         #docker embedded dns ip
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Port $server_port;

    # SSL Settings
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    # Based on modern
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # match any subdomain and forward to docker named container
    server {
        listen 80;
        listen                443 ssl;
        ssl_certificate       /run/secrets/public.pem;
        ssl_certificate_key   /run/secrets/private.pem;

        server_name  ~^(?<appname>.+)\.dev\.threax\.com$;


        location / {
            proxy_pass                http://${appname}.appnet:5000;   #can add port here if needed
            proxy_http_version        1.1;
            client_max_body_size      0;
            # proxy_ssl_session_reuse on; # For ssl, set to https on proxy_pass and uncomment this
        }
    }
}