worker_processes 4;
 
events { worker_connections 1024; }
 
http {
    sendfile on;

	server {
        listen 80;
		#Uncomment below for ssl, it does work
		listen                443 ssl;
		ssl_certificate       /run/secrets/localhost.crt;
		ssl_certificate_key   /run/secrets/localhost.key;

		server_name  ~^(?<appname>.+)\.dev\.threax\.com$;
 
        #If you use the following line instead, this works off paths instead of subdomains.
        #location ~* ^/(?<appname>.*?)(/.*)$ {
        location / {
			resolver                127.0.0.11 ipv6=off;			#docker embedded dns, can probably do better than this
            proxy_pass              http://${appname};
            proxy_redirect          off;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection keep-alive;
            proxy_set_header        Host $http_host;
            proxy_cache_bypass      $http_upgrade;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            client_max_body_size 	10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout 	90;
            proxy_send_timeout 		90;
            proxy_read_timeout 		90;
            proxy_buffers			32 4k;
            proxy_set_header        X-NginX-Proxy true;
            proxy_no_cache          "1";
            proxy_cache_bypass      "1";
            proxy_cache_valid       0m;
        }
    }
}